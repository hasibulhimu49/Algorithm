#include <stdio.h>
#include <stdlib.h>

// Function to merge two sorted arrays into a single sorted array
void merge(int arr1[], int arr2[], int size1, int size2, int merged[]) {
    int i = 0, j = 0, k = 0;

    while (i < size1 && j < size2) {
        if (arr1[i] < arr2[j])
            merged[k++] = arr1[i++];
        else
            merged[k++] = arr2[j++];
    }

    while (i < size1)
        merged[k++] = arr1[i++];

    while (j < size2)
        merged[k++] = arr2[j++];
}

// Function to perform merge sort on an array
void merge_sort(int arr[], int size) {
    if (size <= 1)
        return;

    int mid = size / 2;
    int *left = (int *)malloc(mid * sizeof(int));
    int *right = (int *)malloc((size - mid) * sizeof(int));

    for (int i = 0; i < mid; i++)
        left[i] = arr[i];

    for (int i = mid; i < size; i++)
        right[i - mid] = arr[i];

    merge_sort(left, mid);
    merge_sort(right, size - mid);
    merge(left, right, mid, size - mid, arr);

    free(left);
    free(right);
}

int main() {
    int arr1[] = {12, 3, 4, 11, 2, 9, 8, 7};
    int size = sizeof(arr1) / sizeof(arr1[0]);

    merge_sort(arr1, size);

    printf("Sorted array: ");
    for (int i = 0; i < size; i++)
        printf("%d ", arr1[i]);

    return 0;
}
